                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module ledChaser
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _CY
                                     13 	.globl _AC
                                     14 	.globl _F0
                                     15 	.globl _RS1
                                     16 	.globl _RS0
                                     17 	.globl _OV
                                     18 	.globl _F1
                                     19 	.globl _P
                                     20 	.globl _PS
                                     21 	.globl _PT1
                                     22 	.globl _PX1
                                     23 	.globl _PT0
                                     24 	.globl _PX0
                                     25 	.globl _RD
                                     26 	.globl _WR
                                     27 	.globl _T1
                                     28 	.globl _T0
                                     29 	.globl _INT1
                                     30 	.globl _INT0
                                     31 	.globl _TXD
                                     32 	.globl _RXD
                                     33 	.globl _P3_7
                                     34 	.globl _P3_6
                                     35 	.globl _P3_5
                                     36 	.globl _P3_4
                                     37 	.globl _P3_3
                                     38 	.globl _P3_2
                                     39 	.globl _P3_1
                                     40 	.globl _P3_0
                                     41 	.globl _EA
                                     42 	.globl _ES
                                     43 	.globl _ET1
                                     44 	.globl _EX1
                                     45 	.globl _ET0
                                     46 	.globl _EX0
                                     47 	.globl _P2_7
                                     48 	.globl _P2_6
                                     49 	.globl _P2_5
                                     50 	.globl _P2_4
                                     51 	.globl _P2_3
                                     52 	.globl _P2_2
                                     53 	.globl _P2_1
                                     54 	.globl _P2_0
                                     55 	.globl _SM0
                                     56 	.globl _SM1
                                     57 	.globl _SM2
                                     58 	.globl _REN
                                     59 	.globl _TB8
                                     60 	.globl _RB8
                                     61 	.globl _TI
                                     62 	.globl _RI
                                     63 	.globl _P1_7
                                     64 	.globl _P1_6
                                     65 	.globl _P1_5
                                     66 	.globl _P1_4
                                     67 	.globl _P1_3
                                     68 	.globl _P1_2
                                     69 	.globl _P1_1
                                     70 	.globl _P1_0
                                     71 	.globl _TF1
                                     72 	.globl _TR1
                                     73 	.globl _TF0
                                     74 	.globl _TR0
                                     75 	.globl _IE1
                                     76 	.globl _IT1
                                     77 	.globl _IE0
                                     78 	.globl _IT0
                                     79 	.globl _P0_7
                                     80 	.globl _P0_6
                                     81 	.globl _P0_5
                                     82 	.globl _P0_4
                                     83 	.globl _P0_3
                                     84 	.globl _P0_2
                                     85 	.globl _P0_1
                                     86 	.globl _P0_0
                                     87 	.globl _B
                                     88 	.globl _ACC
                                     89 	.globl _PSW
                                     90 	.globl _IP
                                     91 	.globl _P3
                                     92 	.globl _IE
                                     93 	.globl _P2
                                     94 	.globl _SBUF
                                     95 	.globl _SCON
                                     96 	.globl _P1
                                     97 	.globl _TH1
                                     98 	.globl _TH0
                                     99 	.globl _TL1
                                    100 	.globl _TL0
                                    101 	.globl _TMOD
                                    102 	.globl _TCON
                                    103 	.globl _PCON
                                    104 	.globl _DPH
                                    105 	.globl _DPL
                                    106 	.globl _SP
                                    107 	.globl _P0
                                    108 	.globl _blink_PARM_2
                                    109 	.globl _delay
                                    110 	.globl _blink
                                    111 ;--------------------------------------------------------
                                    112 ; special function registers
                                    113 ;--------------------------------------------------------
                                    114 	.area RSEG    (ABS,DATA)
      000000                        115 	.org 0x0000
                           000080   116 _P0	=	0x0080
                           000081   117 _SP	=	0x0081
                           000082   118 _DPL	=	0x0082
                           000083   119 _DPH	=	0x0083
                           000087   120 _PCON	=	0x0087
                           000088   121 _TCON	=	0x0088
                           000089   122 _TMOD	=	0x0089
                           00008A   123 _TL0	=	0x008a
                           00008B   124 _TL1	=	0x008b
                           00008C   125 _TH0	=	0x008c
                           00008D   126 _TH1	=	0x008d
                           000090   127 _P1	=	0x0090
                           000098   128 _SCON	=	0x0098
                           000099   129 _SBUF	=	0x0099
                           0000A0   130 _P2	=	0x00a0
                           0000A8   131 _IE	=	0x00a8
                           0000B0   132 _P3	=	0x00b0
                           0000B8   133 _IP	=	0x00b8
                           0000D0   134 _PSW	=	0x00d0
                           0000E0   135 _ACC	=	0x00e0
                           0000F0   136 _B	=	0x00f0
                                    137 ;--------------------------------------------------------
                                    138 ; special function bits
                                    139 ;--------------------------------------------------------
                                    140 	.area RSEG    (ABS,DATA)
      000000                        141 	.org 0x0000
                           000080   142 _P0_0	=	0x0080
                           000081   143 _P0_1	=	0x0081
                           000082   144 _P0_2	=	0x0082
                           000083   145 _P0_3	=	0x0083
                           000084   146 _P0_4	=	0x0084
                           000085   147 _P0_5	=	0x0085
                           000086   148 _P0_6	=	0x0086
                           000087   149 _P0_7	=	0x0087
                           000088   150 _IT0	=	0x0088
                           000089   151 _IE0	=	0x0089
                           00008A   152 _IT1	=	0x008a
                           00008B   153 _IE1	=	0x008b
                           00008C   154 _TR0	=	0x008c
                           00008D   155 _TF0	=	0x008d
                           00008E   156 _TR1	=	0x008e
                           00008F   157 _TF1	=	0x008f
                           000090   158 _P1_0	=	0x0090
                           000091   159 _P1_1	=	0x0091
                           000092   160 _P1_2	=	0x0092
                           000093   161 _P1_3	=	0x0093
                           000094   162 _P1_4	=	0x0094
                           000095   163 _P1_5	=	0x0095
                           000096   164 _P1_6	=	0x0096
                           000097   165 _P1_7	=	0x0097
                           000098   166 _RI	=	0x0098
                           000099   167 _TI	=	0x0099
                           00009A   168 _RB8	=	0x009a
                           00009B   169 _TB8	=	0x009b
                           00009C   170 _REN	=	0x009c
                           00009D   171 _SM2	=	0x009d
                           00009E   172 _SM1	=	0x009e
                           00009F   173 _SM0	=	0x009f
                           0000A0   174 _P2_0	=	0x00a0
                           0000A1   175 _P2_1	=	0x00a1
                           0000A2   176 _P2_2	=	0x00a2
                           0000A3   177 _P2_3	=	0x00a3
                           0000A4   178 _P2_4	=	0x00a4
                           0000A5   179 _P2_5	=	0x00a5
                           0000A6   180 _P2_6	=	0x00a6
                           0000A7   181 _P2_7	=	0x00a7
                           0000A8   182 _EX0	=	0x00a8
                           0000A9   183 _ET0	=	0x00a9
                           0000AA   184 _EX1	=	0x00aa
                           0000AB   185 _ET1	=	0x00ab
                           0000AC   186 _ES	=	0x00ac
                           0000AF   187 _EA	=	0x00af
                           0000B0   188 _P3_0	=	0x00b0
                           0000B1   189 _P3_1	=	0x00b1
                           0000B2   190 _P3_2	=	0x00b2
                           0000B3   191 _P3_3	=	0x00b3
                           0000B4   192 _P3_4	=	0x00b4
                           0000B5   193 _P3_5	=	0x00b5
                           0000B6   194 _P3_6	=	0x00b6
                           0000B7   195 _P3_7	=	0x00b7
                           0000B0   196 _RXD	=	0x00b0
                           0000B1   197 _TXD	=	0x00b1
                           0000B2   198 _INT0	=	0x00b2
                           0000B3   199 _INT1	=	0x00b3
                           0000B4   200 _T0	=	0x00b4
                           0000B5   201 _T1	=	0x00b5
                           0000B6   202 _WR	=	0x00b6
                           0000B7   203 _RD	=	0x00b7
                           0000B8   204 _PX0	=	0x00b8
                           0000B9   205 _PT0	=	0x00b9
                           0000BA   206 _PX1	=	0x00ba
                           0000BB   207 _PT1	=	0x00bb
                           0000BC   208 _PS	=	0x00bc
                           0000D0   209 _P	=	0x00d0
                           0000D1   210 _F1	=	0x00d1
                           0000D2   211 _OV	=	0x00d2
                           0000D3   212 _RS0	=	0x00d3
                           0000D4   213 _RS1	=	0x00d4
                           0000D5   214 _F0	=	0x00d5
                           0000D6   215 _AC	=	0x00d6
                           0000D7   216 _CY	=	0x00d7
                                    217 ;--------------------------------------------------------
                                    218 ; overlayable register banks
                                    219 ;--------------------------------------------------------
                                    220 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        221 	.ds 8
                                    222 ;--------------------------------------------------------
                                    223 ; internal ram data
                                    224 ;--------------------------------------------------------
                                    225 	.area DSEG    (DATA)
      000000                        226 _blink_PARM_2:
      000000                        227 	.ds 1
                                    228 ;--------------------------------------------------------
                                    229 ; overlayable items in internal ram
                                    230 ;--------------------------------------------------------
                                    231 	.area	OSEG    (OVR,DATA)
      000000                        232 _delay_i_10000_6:
      000000                        233 	.ds 4
                                    234 ;--------------------------------------------------------
                                    235 ; Stack segment in internal ram
                                    236 ;--------------------------------------------------------
                                    237 	.area SSEG
      000000                        238 __start__stack:
      000000                        239 	.ds	1
                                    240 
                                    241 ;--------------------------------------------------------
                                    242 ; indirectly addressable internal ram data
                                    243 ;--------------------------------------------------------
                                    244 	.area ISEG    (DATA)
                                    245 ;--------------------------------------------------------
                                    246 ; absolute internal ram data
                                    247 ;--------------------------------------------------------
                                    248 	.area IABS    (ABS,DATA)
                                    249 	.area IABS    (ABS,DATA)
                                    250 ;--------------------------------------------------------
                                    251 ; bit data
                                    252 ;--------------------------------------------------------
                                    253 	.area BSEG    (BIT)
                                    254 ;--------------------------------------------------------
                                    255 ; paged external ram data
                                    256 ;--------------------------------------------------------
                                    257 	.area PSEG    (PAG,XDATA)
                                    258 ;--------------------------------------------------------
                                    259 ; uninitialized external ram data
                                    260 ;--------------------------------------------------------
                                    261 	.area XSEG    (XDATA)
                                    262 ;--------------------------------------------------------
                                    263 ; absolute external ram data
                                    264 ;--------------------------------------------------------
                                    265 	.area XABS    (ABS,XDATA)
                                    266 ;--------------------------------------------------------
                                    267 ; initialized external ram data
                                    268 ;--------------------------------------------------------
                                    269 	.area XISEG   (XDATA)
                                    270 	.area HOME    (CODE)
                                    271 	.area GSINIT0 (CODE)
                                    272 	.area GSINIT1 (CODE)
                                    273 	.area GSINIT2 (CODE)
                                    274 	.area GSINIT3 (CODE)
                                    275 	.area GSINIT4 (CODE)
                                    276 	.area GSINIT5 (CODE)
                                    277 	.area GSINIT  (CODE)
                                    278 	.area GSFINAL (CODE)
                                    279 	.area CSEG    (CODE)
                                    280 ;--------------------------------------------------------
                                    281 ; interrupt vector
                                    282 ;--------------------------------------------------------
                                    283 	.area HOME    (CODE)
      000000                        284 __interrupt_vect:
      000000 02r00r00         [24]  285 	ljmp	__sdcc_gsinit_startup
                                    286 ;--------------------------------------------------------
                                    287 ; global & static initialisations
                                    288 ;--------------------------------------------------------
                                    289 	.area HOME    (CODE)
                                    290 	.area GSINIT  (CODE)
                                    291 	.area GSFINAL (CODE)
                                    292 	.area GSINIT  (CODE)
                                    293 	.globl __sdcc_gsinit_startup
                                    294 	.globl __sdcc_program_startup
                                    295 	.globl __start__stack
                                    296 	.globl __mcs51_genXINIT
                                    297 	.globl __mcs51_genXRAMCLEAR
                                    298 	.globl __mcs51_genRAMCLEAR
                                    299 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  300 	ljmp	__sdcc_program_startup
                                    301 ;--------------------------------------------------------
                                    302 ; Home
                                    303 ;--------------------------------------------------------
                                    304 	.area HOME    (CODE)
                                    305 	.area HOME    (CODE)
      000003                        306 __sdcc_program_startup:
      000003 02r00r00         [24]  307 	ljmp	_main
                                    308 ;	return from main will return to caller
                                    309 ;--------------------------------------------------------
                                    310 ; code
                                    311 ;--------------------------------------------------------
                                    312 	.area CSEG    (CODE)
                                    313 ;------------------------------------------------------------
                                    314 ;Allocation info for local variables in function 'main'
                                    315 ;------------------------------------------------------------
                                    316 ;	ledChaser.c:17: void main(void)
                                    317 ;	-----------------------------------------
                                    318 ;	 function main
                                    319 ;	-----------------------------------------
      000000                        320 _main:
                           000007   321 	ar7 = 0x07
                           000006   322 	ar6 = 0x06
                           000005   323 	ar5 = 0x05
                           000004   324 	ar4 = 0x04
                           000003   325 	ar3 = 0x03
                           000002   326 	ar2 = 0x02
                           000001   327 	ar1 = 0x01
                           000000   328 	ar0 = 0x00
                                    329 ;	ledChaser.c:19: P1=0x00;	
      000000 75 90 00         [24]  330 	mov	_P1,#0x00
                                    331 ;	ledChaser.c:20: P2=0x00;
      000003 75 A0 00         [24]  332 	mov	_P2,#0x00
                                    333 ;	ledChaser.c:21: P0=0xff;
      000006 75 80 FF         [24]  334 	mov	_P0,#0xff
                                    335 ;	ledChaser.c:22: P3=0x00;
      000009 75 B0 00         [24]  336 	mov	_P3,#0x00
                                    337 ;	ledChaser.c:23: P2_0=1;
                                    338 ;	assignBit
      00000C D2 A0            [12]  339 	setb	_P2_0
                                    340 ;	ledChaser.c:24: delay(20000);
      00000E 90 4E 20         [24]  341 	mov	dptr,#0x4e20
      000011 E4               [12]  342 	clr	a
      000012 F5 F0            [12]  343 	mov	b,a
      000014 12r00r22         [24]  344 	lcall	_delay
                                    345 ;	ledChaser.c:25: while(1)
      000017                        346 00102$:
                                    347 ;	ledChaser.c:27: blink(1,P1_PIN_8);
      000017 75*00 80         [24]  348 	mov	_blink_PARM_2,#0x80
      00001A 75 82 01         [24]  349 	mov	dpl, #0x01
      00001D 12r00r5F         [24]  350 	lcall	_blink
                                    351 ;	ledChaser.c:30: }
      000020 80 F5            [24]  352 	sjmp	00102$
                                    353 ;------------------------------------------------------------
                                    354 ;Allocation info for local variables in function 'delay'
                                    355 ;------------------------------------------------------------
                                    356 ;i                         Allocated with name '_delay_i_10000_6'
                                    357 ;j                         Allocated to registers r3 
                                    358 ;k                         Allocated to registers r0 r1 r2 r7 
                                    359 ;------------------------------------------------------------
                                    360 ;	ledChaser.c:31: void delay(uint32_t i)
                                    361 ;	-----------------------------------------
                                    362 ;	 function delay
                                    363 ;	-----------------------------------------
      000022                        364 _delay:
      000022 85 82*00         [24]  365 	mov	_delay_i_10000_6,dpl
      000025 85 83*01         [24]  366 	mov	(_delay_i_10000_6 + 1),dph
      000028 85 F0*02         [24]  367 	mov	(_delay_i_10000_6 + 2),b
      00002B F5*03            [12]  368 	mov	(_delay_i_10000_6 + 3),a
                                    369 ;	ledChaser.c:33: for(uint32_t j=0;j<10;j++)
      00002D 7B 00            [12]  370 	mov	r3,#0x00
      00002F                        371 00107$:
      00002F BB 0A 00         [24]  372 	cjne	r3,#0x0a,00137$
      000032                        373 00137$:
      000032 50 2A            [24]  374 	jnc	00109$
                                    375 ;	ledChaser.c:35: for(uint32_t k=0;k<i;k++)
      000034 78 00            [12]  376 	mov	r0,#0x00
      000036 79 00            [12]  377 	mov	r1,#0x00
      000038 7A 00            [12]  378 	mov	r2,#0x00
      00003A 7F 00            [12]  379 	mov	r7,#0x00
      00003C                        380 00104$:
      00003C C3               [12]  381 	clr	c
      00003D E8               [12]  382 	mov	a,r0
      00003E 95*00            [12]  383 	subb	a,_delay_i_10000_6
      000040 E9               [12]  384 	mov	a,r1
      000041 95*01            [12]  385 	subb	a,(_delay_i_10000_6 + 1)
      000043 EA               [12]  386 	mov	a,r2
      000044 95*02            [12]  387 	subb	a,(_delay_i_10000_6 + 2)
      000046 EF               [12]  388 	mov	a,r7
      000047 95*03            [12]  389 	subb	a,(_delay_i_10000_6 + 3)
      000049 50 10            [24]  390 	jnc	00108$
                                    391 ;	ledChaser.c:37: __asm__("nop");
      00004B 00               [12]  392 	nop
                                    393 ;	ledChaser.c:35: for(uint32_t k=0;k<i;k++)
      00004C 08               [12]  394 	inc	r0
      00004D B8 00 09         [24]  395 	cjne	r0,#0x00,00140$
      000050 09               [12]  396 	inc	r1
      000051 B9 00 05         [24]  397 	cjne	r1,#0x00,00140$
      000054 0A               [12]  398 	inc	r2
      000055 BA 00 E4         [24]  399 	cjne	r2,#0x00,00104$
      000058 0F               [12]  400 	inc	r7
      000059                        401 00140$:
      000059 80 E1            [24]  402 	sjmp	00104$
      00005B                        403 00108$:
                                    404 ;	ledChaser.c:33: for(uint32_t j=0;j<10;j++)
      00005B 0B               [12]  405 	inc	r3
      00005C 80 D1            [24]  406 	sjmp	00107$
      00005E                        407 00109$:
                                    408 ;	ledChaser.c:40: }
      00005E 22               [24]  409 	ret
                                    410 ;------------------------------------------------------------
                                    411 ;Allocation info for local variables in function 'blink'
                                    412 ;------------------------------------------------------------
                                    413 ;pin                       Allocated with name '_blink_PARM_2'
                                    414 ;port                      Allocated to registers r7 
                                    415 ;------------------------------------------------------------
                                    416 ;	ledChaser.c:42: void blink(unsigned char port, unsigned char pin)
                                    417 ;	-----------------------------------------
                                    418 ;	 function blink
                                    419 ;	-----------------------------------------
      00005F                        420 _blink:
                                    421 ;	ledChaser.c:44: switch (port)
      00005F E5 82            [12]  422 	mov	a,dpl
      000061 FF               [12]  423 	mov	r7,a
      000062 24 FC            [12]  424 	add	a,#0xff - 0x03
      000064 40 3C            [24]  425 	jc	00106$
      000066 EF               [12]  426 	mov	a,r7
      000067 2F               [12]  427 	add	a,r7
                                    428 ;	ledChaser.c:46: case 0:
      000068 90r00r6C         [24]  429 	mov	dptr,#00116$
      00006B 73               [24]  430 	jmp	@a+dptr
      00006C                        431 00116$:
      00006C 80 06            [24]  432 	sjmp	00101$
      00006E 80 0A            [24]  433 	sjmp	00102$
      000070 80 0E            [24]  434 	sjmp	00103$
      000072 80 1E            [24]  435 	sjmp	00104$
      000074                        436 00101$:
                                    437 ;	ledChaser.c:47: P0 ^= (pin); // Toggle pin on Port 0
      000074 E5*00            [12]  438 	mov	a,_blink_PARM_2
      000076 62 80            [12]  439 	xrl	_P0,a
                                    440 ;	ledChaser.c:48: break;
                                    441 ;	ledChaser.c:49: case 1:
      000078 80 28            [24]  442 	sjmp	00106$
      00007A                        443 00102$:
                                    444 ;	ledChaser.c:50: P1 ^= (pin); // Toggle pin on Port 1
      00007A E5*00            [12]  445 	mov	a,_blink_PARM_2
      00007C 62 90            [12]  446 	xrl	_P1,a
                                    447 ;	ledChaser.c:51: break;
                                    448 ;	ledChaser.c:52: case 2:
      00007E 80 22            [24]  449 	sjmp	00106$
      000080                        450 00103$:
                                    451 ;	ledChaser.c:53: P2 ^= (1<<pin); // Toggle pin on Port 2
      000080 85*00 F0         [24]  452 	mov	b,_blink_PARM_2
      000083 05 F0            [12]  453 	inc	b
      000085 74 01            [12]  454 	mov	a,#0x01
      000087 80 02            [24]  455 	sjmp	00118$
      000089                        456 00117$:
      000089 25 E0            [12]  457 	add	a,acc
      00008B                        458 00118$:
      00008B D5 F0 FB         [24]  459 	djnz	b,00117$
      00008E 62 A0            [12]  460 	xrl	_P2,a
                                    461 ;	ledChaser.c:54: break;
                                    462 ;	ledChaser.c:55: case 3:
      000090 80 10            [24]  463 	sjmp	00106$
      000092                        464 00104$:
                                    465 ;	ledChaser.c:56: P3 ^= (1<<pin); // Toggle pin on Port 3
      000092 85*00 F0         [24]  466 	mov	b,_blink_PARM_2
      000095 05 F0            [12]  467 	inc	b
      000097 74 01            [12]  468 	mov	a,#0x01
      000099 80 02            [24]  469 	sjmp	00120$
      00009B                        470 00119$:
      00009B 25 E0            [12]  471 	add	a,acc
      00009D                        472 00120$:
      00009D D5 F0 FB         [24]  473 	djnz	b,00119$
      0000A0 62 B0            [12]  474 	xrl	_P3,a
                                    475 ;	ledChaser.c:61: }
      0000A2                        476 00106$:
                                    477 ;	ledChaser.c:62: delay(1000); // 1 second delay
      0000A2 90 03 E8         [24]  478 	mov	dptr,#0x03e8
      0000A5 E4               [12]  479 	clr	a
      0000A6 F5 F0            [12]  480 	mov	b,a
                                    481 ;	ledChaser.c:63: }
      0000A8 02r00r22         [24]  482 	ljmp	_delay
                                    483 	.area CSEG    (CODE)
                                    484 	.area CONST   (CODE)
                                    485 	.area XINIT   (CODE)
                                    486 	.area CABS    (ABS,CODE)
